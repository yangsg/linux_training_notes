#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    #log         127.0.0.1 local2
    log /dev/log local2 info

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

listen admin_status
    bind 192.168.175.100:9088  # 注: 这种方式需要启用 net.ipv4.ip_nonlocal_bind, 否则应使用类似 *:9088 或 0.0.0.0:9088 这种绑定方式
    log /dev/log local2 err
    stats refresh 30s
    stats uri /haproxy-status     #http://192.168.175.100:9088/haproxy-status
    stats realm Welcome login
    stats auth admin:1234
    stats hide-version
    stats admin if TRUE

frontend web_service
    bind 192.168.175.100:80 # 注: 这种方式需要启用 net.ipv4.ip_nonlocal_bind, 否则应使用类似 *:80 或 0.0.0.0:80 这种绑定方式
    mode http
    log global
    option forwardfor       except 127.0.0.0/8   #添加 header 'X-Forwarded-For'(可自定义), 见 http://cbonte.github.io/haproxy-dconv/2.0/configuration.html#4.2-option%20forwardfor

    acl host_bbs hdr_dom(host) -i bbs.linux.com
    acl host_blog hdr_beg(host) -i blog.

    # 如下的 acl 可用做动静分离(不过本例中没有演示或实现该效果)
    #acl url_static       path_beg       -i /static /images /javascript /stylesheets
    #acl url_static       path_end       -i .jpg .gif .png .css .js

    use_backend server_bbs          if host_bbs
    use_backend server_blog          if host_blog
    default_backend             server_bbs   #此时通过如 http://ip 访问时, 访问到的是默认的 server_bbs

backend server_bbs
    mode http
    option     redispatch
    option     abortonclose
    cookie     SERVERID
    balance    roundrobin
    server bbs01 192.168.175.121:80 cookie bbs01 weight 3  check inter 2000 rise 2 fall 2
    server bbs02 192.168.175.122:80 cookie bbs02 weight 3  check inter 2000 rise 2 fall 2

backend server_blog
    mode http
    option     redispatch
    option     abortonclose
    cookie     SERVERID
    balance    roundrobin
    server blog01 192.168.175.131:80 cookie blog01 weight 3  check inter 2000 rise 2 fall 2
    server blog02 192.168.175.132:80 cookie blog02 weight 3  check inter 2000 rise 2 fall 2
