

https://dev.mysql.com/doc/refman/8.0/en/binary-installation.html


# 确认一下 mysql8 依赖的 libaio 是否安装，如果还未安装，则执行命令 `dnf install -y libaio` 对其安装
[root@localhost ~]# rpm -q libaio
libaio-0.3.112-1.el8.x86_64

[root@localhost ~]# dnf install -y libaio

# 注:Oracle Linux 8 / Red Hat 8 (EL8)(包括Rocky linux) 默认没有安装文件 /lib64/libtinfo.so.5
#    其是客户端工具 mysql-VERSION-el7-x86_64.tar.gz 和 mysql-VERSION-linux-glibc2.12-x86_64.tar.xz
#    中的 bin/mysql 客户端工具所必需的, 所以解决方法是安装 ncurses-compat-libs 包：
# 参考：https://dev.mysql.com/doc/refman/8.0/en/binary-installation.html
[root@localhost ~]# dnf install -y ncurses-compat-libs

[root@localhost ~]# mkdir /app
[root@localhost ~]# useradd -r -s /bin/false mysql
[root@localhost ~]# mkdir -p /mydata/data
[root@localhost ~]# chown -R mysql:mysql /mydata/data/

# 下载准备 mysql8 的二进制包, 其下载地址: https://dev.mysql.com/downloads/mysql/
[root@localhost ~]# cd download/
[root@localhost download]# ls
mysql-8.0.26-linux-glibc2.12-x86_64.tar.xz



tar -C /app/  -xvf mysql-8.0.26-linux-glibc2.12-x86_64.tar.xz

# 注: 我的 rocky-linux 8.4 是最小化安装的，发现其默认没有安装 tar 命令, 所以必要时可使用命令`dnf install -y tar` 进行安装
[root@localhost download]# tar -C /app/  -xvf mysql-8.0.26-linux-glibc2.12-x86_64.tar.xz
[root@localhost download]# cd /app/
[root@localhost app]# ln -s mysql-8.0.26-linux-glibc2.12-x86_64 mysql
[root@localhost app]# cd mysql
[root@localhost mysql]# ls -F
bin/  docs/  include/  lib/  LICENSE  man/  README  share/  support-files/

[root@localhost mysql]# chown -R root:mysql /app/mysql/
[root@localhost mysql]# vim /etc/profile
	export PATH=$PATH:/app/mysql/bin

[root@localhost mysql]# source /etc/profile


// 初始化数据库(即初始化 data directory)
 参考: https://dev.mysql.com/doc/refman/8.0/en/data-directory-initialization.html

  //注: 除了使用 命令类似 `sudo bin/mysqld --initialize --user=mysql --basedir=/app/mysql/  --datadir=/mydata/data` 这样的命令
        来初始化 data 目录，也可以指定 option file 来实现初始化选项的指定.
[root@localhost mysql]# vim /etc/my.cnf

	#注: 发现设置了[client], [mysql] 中的  default-character-set 后无法在 mysql 客户端工具中键入中文字符,所以这里将其注释掉
	[client]  # 注: [client] group 是 所有的 mysql client 工具都会读取的配置文件
	#loose-default-character-set = utf8mb4   # 加 loose- 前缀是为解决 [mysqlbinlog] group 不识别该 选项的 问题

	[mysql]
	#default-character-set = utf8mb4

	[mysqlbinlog]
	set_charset=utf8mb4

	[mysqld]
	# 设置 mysql 字符集为 utf8mb4
	character-set-client-handshake = FALSE  # 忽略 client 端的 character set 设置
	character-set-server = utf8mb4    # 设置了 character-set-server 的 同时也应该设置 collation-server
	collation-server = utf8mb4_unicode_ci   #注: mysql8 中,如不指定 collation-server,则其采用默认值为 utf8mb4_0900_ai_ci

	basedir=/app/mysql
	datadir=/mydata/data
	port=3306
	server_id=84
	socket=/tmp/mysql.sock

	skip-name-resolve=ON

[root@localhost mysql]# mysqld --defaults-file=/etc/my.cnf --initialize --user=mysql  #注意记录下该命令生成的临时密码
2021-09-05T09:34:53.054773Z 0 [System] [MY-013169] [Server] /app/mysql-8.0.26-linux-glibc2.12-x86_64/bin/mysqld (mysqld 8.0.26) initializing of server in progress as process 1643
2021-09-05T09:34:53.248145Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.
2021-09-05T09:34:56.863328Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.
2021-09-05T09:34:57.875290Z 0 [Warning] [MY-013746] [Server] A deprecated TLS version TLSv1 is enabled for channel mysql_main
2021-09-05T09:34:57.875633Z 0 [Warning] [MY-013746] [Server] A deprecated TLS version TLSv1.1 is enabled for channel mysql_main
2021-09-05T09:34:58.163081Z 6 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: edIxfDKs6t%R   #<<<<<<<记下临时密码

// 设置开机自启
[root@localhost mysql]# cp /app/mysql/support-files/mysql.server  /etc/init.d/mysqld
[root@localhost mysql]# chmod a+x /etc/init.d/mysqld
[root@localhost mysql]# vim /etc/init.d/mysqld
    basedir=/app/mysql
    datadir=/mydata/data

[root@localhost mysql]# chkconfig --add mysqld
[root@localhost mysql]# chkconfig mysqld on
[root@localhost mysql]# chkconfig --list mysqld
	mysqld          0:off   1:off   2:on    3:on    4:on    5:on    6:off

[root@localhost mysql]# /etc/init.d/mysqld start
Starting MySQL.Logging to '/mydata/data/localhost.localdomain.err'.
. SUCCESS!

[root@localhost mysql]# ss -antpu | grep :3306
tcp   LISTEN 0      128                 *:3306              *:*     users:(("mysqld",pid=1958,fd=27))
tcp   LISTEN 0      70                  *:33060             *:*     users:(("mysqld",pid=1958,fd=24))

// 数据库初始化安全设置 https://dev.mysql.com/doc/refman/5.7/en/mysql-secure-installation.html

[root@localhost mysql]# systemctl cat mysqld.service  #查看一下自动生成的 mysqld.service 的内容
	# /run/systemd/generator.late/mysqld.service
	# Automatically generated by systemd-sysv-generator

	[Unit]
	Documentation=man:systemd-sysv-generator(8)
	SourcePath=/etc/rc.d/init.d/mysqld
	Description=LSB: start and stop MySQL
	Before=multi-user.target
	Before=multi-user.target
	Before=multi-user.target
	Before=graphical.target
	After=network-online.target
	After=remote-fs.target
	After=ypbind.service
	After=nscd.service
	After=ldap.service
	After=ntpd.service
	After=xntpd.service
	Wants=network-online.target

	[Service]
	Type=forking
	Restart=no
	TimeoutSec=5min
	IgnoreSIGPIPE=no
	KillMode=process
	GuessMainPID=no
	RemainAfterExit=yes
	SuccessExitStatus=5 6
	ExecStart=/etc/rc.d/init.d/mysqld start
	ExecStop=/etc/rc.d/init.d/mysqld stop
	ExecReload=/etc/rc.d/init.d/mysqld reload


[root@localhost mysql]# ss -anptu | grep 3306
tcp   LISTEN 0      128                 *:3306              *:*     users:(("mysqld",pid=1958,fd=27))
tcp   LISTEN 0      70                  *:33060             *:*     users:(("mysqld",pid=1958,fd=24))


// 安全初始化设置
[root@localhost mysql]# which mysql_secure_installation
/app/mysql/bin/mysql_secure_installation

[root@localhost mysql]# mysql_secure_installation --basedir=/app/mysql/
	mysql_secure_installation: [ERROR] unknown variable 'basedir=/app/mysql/'.

	Securing the MySQL server deployment.

	Enter password for user root:  <--- 此处键入之前步骤中记录下的临时密码, 如此例中为 edIxfDKs6t%R

	The existing password for the user account root has expired. Please set a new password.

	New password:  <----键入新密码

	Re-enter new password: <----再次键入一遍新密码

	VALIDATE PASSWORD COMPONENT can be used to test passwords
	and improve security. It checks the strength of password
	and allows the users to set only those passwords which are
	secure enough. Would you like to setup VALIDATE PASSWORD component?

	Press y|Y for Yes, any other key for No: n <----直接键入n, 即回答 no
	Using existing password for root.
	Change the password for root ? ((Press y|Y for Yes, any other key for No) : n <----直接键入n, 即回答 no

	 ... skipping.
	By default, a MySQL installation has an anonymous user,
	allowing anyone to log into MySQL without having to have
	a user account created for them. This is intended only for
	testing, and to make the installation go a bit smoother.
	You should remove them before moving into a production
	environment.

	Remove anonymous users? (Press y|Y for Yes, any other key for No) : y  <--- 删除匿名账号
	Success.


	Normally, root should only be allowed to connect from
	'localhost'. This ensures that someone cannot guess at
	the root password from the network.

	Disallow root login remotely? (Press y|Y for Yes, any other key for No) : y <----禁止 root 远程登录
	Success.

	By default, MySQL comes with a database named 'test' that
	anyone can access. This is also intended only for testing,
	and should be removed before moving into a production
	environment.


	Remove test database and access to it? (Press y|Y for Yes, any other key for No) : y <---删除 test 示例数据库
	 - Dropping test database...
	Success.

	 - Removing privileges on test database...
	Success.

	Reloading the privilege tables will ensure that all changes
	made so far will take effect immediately.

	Reload privilege tables now? (Press y|Y for Yes, any other key for No) : y  <----重新加载授权表
	Success.

	All done!



[root@localhost mysql]# mysql -h localhost -u root -p
	Enter password:
	Welcome to the MySQL monitor.  Commands end with ; or \g.
	Your MySQL connection id is 16
	Server version: 8.0.26 MySQL Community Server - GPL

	Copyright (c) 2000, 2021, Oracle and/or its affiliates.

	Oracle is a registered trademark of Oracle Corporation and/or its
	affiliates. Other names may be trademarks of their respective
	owners.

	Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

	mysql> status
	--------------
	mysql  Ver 8.0.26 for Linux on x86_64 (MySQL Community Server - GPL)

	Connection id:          16
	Current database:
	Current user:           root@localhost
	SSL:                    Not in use
	Current pager:          stdout
	Using outfile:          ''
	Using delimiter:        ;
	Server version:         8.0.26 MySQL Community Server - GPL
	Protocol version:       10
	Connection:             Localhost via UNIX socket
	Server characterset:    utf8mb4
	Db     characterset:    utf8mb4
	Client characterset:    utf8mb4
	Conn.  characterset:    utf8mb4
	UNIX socket:            /tmp/mysql.sock
	Binary data as:         Hexadecimal
	Uptime:                 45 min 9 sec

	Threads: 2  Questions: 13  Slow queries: 0  Opens: 133  Flush tables: 3  Open tables: 49  Queries per second avg: 0.004
	--------------

	mysql> SELECT User, Host, plugin FROM mysql.user;
	+------------------+-----------+-----------------------+
	| User             | Host      | plugin                |
	+------------------+-----------+-----------------------+
	| mysql.infoschema | localhost | caching_sha2_password |
	| mysql.session    | localhost | caching_sha2_password |
	| mysql.sys        | localhost | caching_sha2_password |
	| root             | localhost | caching_sha2_password |
	+------------------+-----------+-----------------------+
	4 rows in set (0.00 sec)

	mysql> SHOW VARIABLES LIKE 'character%';
	+--------------------------+----------------------------------------------------------+
	| Variable_name            | Value                                                    |
	+--------------------------+----------------------------------------------------------+
	| character_set_client     | utf8mb4                                                  |
	| character_set_connection | utf8mb4                                                  |
	| character_set_database   | utf8mb4                                                  |
	| character_set_filesystem | binary                                                   |
	| character_set_results    | utf8mb4                                                  |
	| character_set_server     | utf8mb4                                                  |
	| character_set_system     | utf8mb3                                                  |
	| character_sets_dir       | /app/mysql-8.0.26-linux-glibc2.12-x86_64/share/charsets/ |
	+--------------------------+----------------------------------------------------------+
	8 rows in set (0.02 sec)

	mysql> SHOW VARIABLES LIKE 'collation%';
	+----------------------+--------------------+
	| Variable_name        | Value              |
	+----------------------+--------------------+
	| collation_connection | utf8mb4_unicode_ci |
	| collation_database   | utf8mb4_unicode_ci |
	| collation_server     | utf8mb4_unicode_ci |
	+----------------------+--------------------+
	3 rows in set (0.00 sec)

	mysql> pager less -Fi
	mysql> show global variables like '%log%';

	mysql> quit
	Bye



----------------------------------------------------------------------
#其他一些小技巧：
https://www.psce.com/en/blog/2012/06/02/how-to-find-mysql-binary-logs-error-logs-temporary-files/
  lsof -nc mysqld | grep -vE '(.so(..*)?$|.frm|.MY?|.ibd|ib_logfile|ibdata|TCP)'






