
# keyword smbpasswd

man smbpasswd


作用: smbpasswd - change a user's SMB password


语法: smbpasswd [-a] [-c <config file>] [-x] [-d] [-e] [-D debuglevel] [-n] [-r <remote machine>] [-R <name resolve order>] [-m] [-U username[%password]] [-h] [-s] [-w pass] [-W] [-i]
        [-L] [username]

说明:
       This tool is part of the samba(7) suite.

       The smbpasswd program has several different functions, depending on whether it is run by the root user or not. When run as a normal user it allows the user to change the
       password used for their SMB sessions on any machines that store SMB passwords.

       By default (when run with no arguments) it will attempt to change the current user's SMB password on the local machine. This is similar to the way the passwd(1) program works.
       smbpasswd differs from how the passwd program works however in that it is not setuid root but works in a client-server mode and communicates with a locally running smbd(8). As a
       consequence in order for this to succeed the smbd daemon must be running on the local machine. On a UNIX machine the encrypted SMB passwords are usually stored in the
       smbpasswd(5) file.

       When run by an ordinary user with no options, smbpasswd will prompt them for their old SMB password and then ask them for their new password twice, to ensure that the new
       password was typed correctly. No passwords will be echoed on the screen whilst being typed. If you have a blank SMB password (specified by the string "NO PASSWORD" in the
       smbpasswd file) then just press the <Enter> key when asked for your old password.

       smbpasswd can also be used by a normal user to change their SMB password on remote machines, such as Windows NT Primary Domain Controllers. See the (-r) and -U options below.

       When run by root, smbpasswd allows new users to be added and deleted in the smbpasswd file, as well as allows changes to the attributes of the user in this file to be made. When
       run by root, smbpasswd accesses the local smbpasswd file directly, thus enabling changes to be made even if smbd is not running.


---------------------------------------------------------------------------------------------------

[root@sambaserver ~]# smbpasswd Bob    # 修改已经存在的 samba user account 的密码
New SMB password:
Retype new SMB password:

注: 有时修改了 samba user account 的 密码后 windows 操作系统无法正常工作, 此时有可能需要在 windows 系统上 删除 其缓存的 曾经的状态数据,
    参考    https://www.cnblogs.com/thammer/p/8283704.html


[Bob@sambaserver ~]$ smbpasswd         # 没有指定 username 时, 表示修改当前用户的密码 (这一点和 passwd 命令有些类似)
Old SMB password:
New SMB password:
Retype new SMB password:
Password changed for user Bob

---------------------------------------------------------------------------------------------------
     -a
         This option specifies that the username following should be added to the local smbpasswd file, with the new password typed (type <Enter> for the old password). This option
         is ignored if the username following already exists in the smbpasswd file and it is treated like a regular change password command. Note that the default passdb backends
         require the user to already exist in the system password file (usually /etc/passwd), else the request to add the user will fail.

[root@sambaserver ~]# useradd Paul
[root@sambaserver ~]# smbpasswd -a Paul   # 添加 samba user account
New SMB password:
Retype new SMB password:
Added user Paul.

[root@sambaserver ~]# pdbedit -L -u Paul
Paul:1006:

---------------------------------------------------------------------------------------------------

     -x
         This option specifies that the username following should be deleted from the local smbpasswd file.

         This option is only available when running smbpasswd as root.

[root@sambaserver ~]# smbpasswd -x Paul    # 删除 samba user account
Deleted user Paul.


---------------------------------------------------------------------------------------------------

     -d
         This option specifies that the username following should be disabled in the local smbpasswd file. This is done by writing a 'D' flag into the account control space in the
         smbpasswd file. Once this is done all attempts to authenticate via SMB using this username will fail.

         If the smbpasswd file is in the 'old' format (pre-Samba 2.0 format) there is no space in the user's password entry to write this information and the command will FAIL. See
         smbpasswd(5) for details on the 'old' and new password file formats.

         This option is only available when running smbpasswd as root.

     -e
         This option specifies that the username following should be enabled in the local smbpasswd file, if the account was previously disabled. If the account was not disabled this
         option has no effect. Once the account is enabled then the user will be able to authenticate via SMB once again.

         If the smbpasswd file is in the 'old' format, then smbpasswd will FAIL to enable the account. See smbpasswd(5) for details on the 'old' and new password file formats.

         This option is only available when running smbpasswd as root.



[root@sambaserver ~]# smbpasswd -d Bob   # 禁用(disable) samba user account
Disabled user Bob.

[root@sambaserver ~]# smbpasswd -e Bob   # 启用(enable) samba user account
Enabled user Bob.

---------------------------------------------------------------------------------------------------

