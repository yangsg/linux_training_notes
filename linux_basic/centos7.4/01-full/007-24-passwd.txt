
# keyword passwd

man passwd
info passwd

作用: passwd - update user's authentication tokens

语法: passwd [-k] [-l] [-u [-f]] [-d] [-e] [-n mindays] [-x maxdays] [-w warndays] [-i inactivedays] [-S] [--stdin] [username]
语法: passwd [-l] [-u] [--stdin] [-S] [-n 日数] [-x 日数] [-w 日数] [-i 日数] [账号名]

说明:
//     The passwd utility is used to update user's authentication token(s).
//
//     This  task  is achieved through calls to the Linux-PAM and Libuser API.  Essentially, it initializes itself as a "passwd" service with Linux-PAM and utilizes configured password
//     modules to authenticate and then update a user's password.
//
//     A simple entry in the global Linux-PAM configuration file for this service would be:
//
//      #
//      # passwd service entry that does strength checking of
//      # a proposed password before updating it.
//      #
//      passwd password requisite pam_cracklib.so retry=3
//      passwd password required pam_unix.so use_authtok
//      #
//
//     Note, other module types are not required for this application to function correctly.

记住2点: Protect your password(隐私), Choose a hard-to-guess password(提升暴力猜测和破解的难度)

注: 要启用密码有效性(合法性)检查,首先要保证/etc/shadow的第5个字段不能为空(对应于 maximum password age 字段)

CONFORMING TO
       Linux-PAM (Pluggable Authentication modules for Linux).

       FILES
              /etc/pam.d/passwd - the Linux-PAM configuration file

SEE ALSO
       pam(8), pam.d(5), libuser.conf(5), and pam_chauthtok(3).

              For more complete information on how to configure this application with Linux-PAM, see the Linux-PAM System Administrators' Guide.
                    http://linux-pam.org/Linux-PAM-html/Linux-PAM_SAG.html
                    https://beausanders.org/linux_shared_files/Linux-PAM_System_Administrators_Guide.pdf



[root@basic ~]# passwd user01      #以 root 身份为 user01 用户修改密码 # 注: PAM 的管理机制写在/etc/pam.d/passwd中,pam_cracklib.so 模块会检验密码并取代/etc/login.defs中PASS_MIN_LEN设定
Changing password for user user01.
New password:
Retype new password:
passwd: all authentication tokens updated successfully.

[root@basic ~]# grep 'user01'  /etc/shadow    # 观察密码修改后 /etc/shadow 的变更情况
user01:$6$Uxxxxxxt$.FNMVC1GL5xxxxxxxxxxxxxxxxxxxxxxxxxma3ENtjcS0lpqdmGfTnFEvoZBZjIAcsY.t0dcBTfMITM8YGXLs/:18019:0:99999:7:::

[root@basic ~]# chage --list user01
Last password change                                    : May 03, 2019
Password expires                                        : never
Password inactive                                       : never
Account expires                                         : never
Minimum number of days between password change          : 0
Maximum number of days between password change          : 99999
Number of days of warning before password expires       : 7


[root@basic ~]# grep 'root' /etc/shadow
root:$6$xxxxxxxxxxU5Vq1o$sCTMvv8n7xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcrMvTLwuiomrWRkrlV1::0:99999:7:::

[root@basic ~]# passwd            # 如果没有加 username 参数，则修改当前用户自己的密码
Changing password for user root.
New password:
Retype new password:
passwd: all authentication tokens updated successfully.

[root@basic ~]# grep 'root' /etc/shadow
root:$6$8xxxxxxo$9HSOcxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxzsC0ojP/:18019:0:99999:7:::


[root@basic ~]# echo "abc543CC" | passwd --stdin user01 #注:正常不应该直接在控制台以明文的方式(容易写入~/.bash_history),而应在某种脚本中使用 --stdin 这种设置方式(此处只是为了演示目的)
Changing password for user user01.
passwd: all authentication tokens updated successfully.

[root@basic ~]# history | grep passwd  | grep -- '--stdin'  # 在历史命令找出了 明文的 密码设置 (所以 passwd --stdin 只应在必要时在某些脚本中并且以安全的方式使用)
  467  echo "abc543CC" | passwd --stdin user01


[root@basic ~]# passwd -S user01   # -S, --status # 显示给定用户的passwd 的简要状态信息 (仅 root 可用) # 注: `passwd -S` 命令无法用于显示账号account的作废信息(即/etc/shadow的第8个字段)
user01 PS 2019-05-03 0 99999 7 -1 (Password set, SHA512 crypt.)

[root@basic ~]# passwd -n 0  user01  # -n, --minimum DAYS:  设置密码最小生命周期(仅 root 可用), 通常应保持为默认的 0,以防系统入侵时造成麻烦
[root@basic ~]# passwd -x 60 user01  # -x, --maximum DAYS:  设置密码最大生命周期(仅 root 可用), 此例中指 user01应该在 60天以内 修改一次密码
[root@basic ~]# passwd -w 7  user01  # -w, --warning DAYS:  设置密码过期前的警告天数(仅 root 可用), 此例中 提前 7 天 就像 user01 显示警告信息
[root@basic ~]# passwd -i 3  user01  # -i, --inactive DAYS: 设置密码过期后其失效作废天数(亦即过期后宽限天数)(仅 root 可用), 此例中 密码过期后 还能宽限 3 天
[root@basic ~]# grep 'user01' /etc/shadow   # 查看设置后密码文件的修改情况
user01:$6$KxxxxxxI$Gemxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx6tMj1:18019:0:60:7:3::
[root@basic ~]# passwd -S user01            # 使用 passwd -S 命令查看密码状态的简要信息
user01 PS 2019-05-03 0 60 7 3 (Password set, SHA512 crypt.)


[root@basic ~]# passwd -l user01   # -l, --lock #(仅仅)锁住密码(在/etc/shadow的加密密码前加!前缀)(仅root可用).注:此时账号并没完全锁住(其还可通过ssh公钥认证),命令`chage -E 0 user`可用于完全锁住
[root@basic ~]# grep 'user01' /etc/shadow  # 观察 用户密码锁住 后 /etc/shadow 中对应加密密码添加了符号 ! 作为前缀
user01:!!$6$xxxxxxxx$xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx:18019:0:60:7:3::
[root@basic ~]# passwd -S user01  # 注意下面的 LK 表示 密码已被锁住
user01 LK 2019-05-03 0 60 7 3 (Password locked.)

[root@basic ~]# passwd -u user01   # -u, --unlock # 解锁密码, 与 -l, --lock 行为相反.(仅root可用)
[root@basic ~]# grep 'user01' /etc/shadow  # 观察解锁后 /etc/shadow 中加密密码的变化(移除的前缀符号 ! )
user01:$6$Kxxxxxxx$GemxNV9mXDg3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx:18019:0:60:7:3::
[root@basic ~]# passwd -S user01   # 使用 passwd -S 观察 密码解锁后的变化 (LK 变成了 PS)
user01 PS 2019-05-03 0 60 7 3 (Password set, SHA512 crypt.)


[root@basic ~]# grep 'user01' /etc/shadow
user01:$6$xxxxxxxx$xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx:18019:0:60:7:3::
[root@basic ~]# passwd -e user01     # -e, --expire: 使密码立刻过期, 强制用户下次尝试登录时修改密码
[root@basic ~]# grep 'user01' /etc/shadow # 观察使用passwd命令强制密码过期后/etc/shadow中对应的第3个字段数字变为了0, 该字段为 0 时具有特殊意义:用户下次尝试登录时需修改密码
user01:$6$xxxxxxxx$xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx:0:0:60:7:3::
[root@basic ~]# passwd -S user01     # 注意下面的 '1970-01-01'
user01 PS 1970-01-01 0 60 7 3 (Password set, SHA512 crypt.)

