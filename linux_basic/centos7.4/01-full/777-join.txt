
# keyword join

man join
info join

作用: join - join lines of two files on a common field


语法: join [OPTION]... FILE1 FILE2


说明:
       For  each  pair  of  input lines with identical join fields, write a line to standard output.
       The default join field is the first, delimited by whitespace.  When FILE1 or FILE2 (not both) is -, read standard input.

注： FILE1 和 FILE2 必须是根据 join fields 排序过的 (FILE1 and FILE2 should be sorted on the join fields)

   The defaults are:
       * the join field is the first field in each line;
       * fields in the input are separated by one or more blanks, with leading blanks on the line ignored;
       * fields in the output are separated by a space;
       * each output line consists of the join field, the remaining fields from FILE1, then the remaining fields from FILE2.


[root@basic ~]# vim file1
1:a:a1
2:c:c1
3:b:b1
4:d:d1

[root@basic ~]# vim file2
3:a2:a
2:c2:c
1:b2:b
4:e2:e

[root@basic ~]# join -t ':'  -1 2 -2 3 <(sort -t ':' -k 2,2 ./file1) <(sort -t ':' -k 3,3 ./file2)
a:1:a1:3:a2
b:3:b1:1:b2
c:2:c1:2:c2

[root@basic ~]# join -a 1 -t ':'  -1 2 -2 3 <(sort -t ':' -k 2,2 ./file1) <(sort -t ':' -k 3,3 ./file2)
a:1:a1:3:a2
b:3:b1:1:b2
c:2:c1:2:c2
d:4:d1

[root@basic ~]# join -a 2 -t ':'  -1 2 -2 3 <(sort -t ':' -k 2,2 ./file1) <(sort -t ':' -k 3,3 ./file2)
a:1:a1:3:a2
b:3:b1:1:b2
c:2:c1:2:c2
e:4:e2

[root@basic ~]# join -a 1 -a 2 -t ':'  -1 2 -2 3 <(sort -t ':' -k 2,2 ./file1) <(sort -t ':' -k 3,3 ./file2)
a:1:a1:3:a2
b:3:b1:1:b2
c:2:c1:2:c2
d:4:d1
e:4:e2

[root@basic ~]# join  -v 1 -t ':'  -1 2 -2 3 <(sort -t ':' -k 2,2 ./file1) <(sort -t ':' -k 3,3 ./file2)
d:4:d1

[root@basic ~]# join  -v 2 -t ':'  -1 2 -2 3 <(sort -t ':' -k 2,2 ./file1) <(sort -t ':' -k 3,3 ./file2)
e:4:e2

[root@basic ~]# join  -v 1 -v 2 -t ':'  -1 2 -2 3 <(sort -t ':' -k 2,2 ./file1) <(sort -t ':' -k 3,3 ./file2)
d:4:d1
e:4:e2


-----------  一个 1 对 多 的 例子 -----------
[root@basic ~]# vim a.txt
1:a
2:b
[root@basic ~]# vim b.txt
1:a01:1
2:a02:1
3:c01:3

[root@basic ~]# join -t ':'  -1 1 -2 3 <(sort -t ':' -k 1,1 ./a.txt) <(sort -t ':' -k 1,3 ./b.txt)
1:a:1:a01
1:a:2:a02

[root@basic ~]# join -v 1 -t ':'  -1 1 -2 3 <(sort -t ':' -k 1,1 ./a.txt) <(sort -t ':' -k 1,3 ./b.txt)
2:b

[root@basic ~]# join -v 2 -t ':'  -1 1 -2 3 <(sort -t ':' -k 1,1 ./a.txt) <(sort -t ':' -k 1,3 ./b.txt)
3:3:c01

