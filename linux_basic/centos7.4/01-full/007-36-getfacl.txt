
# keyword getfacl

man getfacl


作用: getfacl - get file access control lists

语法: getfacl [-aceEsRLPtpndvh] file ...
语法: getfacl [-aceEsRLPtpndvh] -

说明:
     For each file, getfacl displays the file name, owner, the group, and the Access Control List (ACL). If a directory has a default ACL, getfacl also displays the default ACL.
     Nondirectories cannot have default ACLs.

     If getfacl is used on a file system that does not support ACLs, getfacl displays the access permissions defined by the traditional file mode permission bits.

       The output format of getfacl is as follows:
               1:  # file: somedir/
               2:  # owner: lisa
               3:  # group: staff
               4:  # flags: -s-  <--(没有flags时不会被显示)Line 4 indicates the setuid (s), setgid (s), and sticky (t) bits: either the letter representing the bit, or else a dash (-).
               5:  user::rwx
               6:  user:joe:rwx               #effective:r-x
               7:  group::rwx                 #effective:r-x
               8:  group:cool:r-x
               9:  mask::r-x   <--Line 9 is the effective rights mask. This entry limits the effective rights granted to all groups and to named users. (The file owner and others permissions are  not affected by the effective rights mask; all other entries are.)
              10:  other::r-x
              11:  default:user::rwx  <--Lines 11--15 display the default ACL associated with this directory. Directories may have a default ACL. Regular files never have a default ACL.
              12:  default:user:joe:rwx       #effective:r-x
              13:  default:group::r-x
              14:  default:mask::r-x
              15:  default:other::---


       The default behavior for getfacl is to display both the ACL and the default ACL, and to include an effective rights comment for lines where the rights of the entry  differ  from
       the effective rights.

       If output is to a terminal, the effective rights comment is aligned to column 40. Otherwise, a single tab character separates the ACL entry and the effective rights comment.

       The ACL listings of multiple files are separated by blank lines.  The output of getfacl can also be used as input to setfacl.

   PERMISSIONS
       Process with search access to a file (i.e., processes with read access to the containing directory of a file) are also granted read access to the file's ACLs.  This is analogous
       to the permissions required for accessing the file mode.

参考:
    man 5 acl
    https://github.com/yangsg/linux_training_notes/blob/master/linux_basic/centos7.4/01-full/007-34-acl-concept.txt


其他选项:

       -L, --logical
           Logical walk, follow symbolic links to directories. The default behavior is to follow symbolic link arguments,
           and skip symbolic links encountered in  subdirectories.   Only effective in combination with -R.

       -P, --physical
           Physical walk, do not follow symbolic links to directories. This also skips symbolic link arguments.  Only effective in combination with -R.



[Bob@basic ~]$ getfacl dir03/  #默认 getfacl 会将access ACL 和 default ACL都显示出来.如果entry rights与effective rights不同,会显示effective注释.只要suid,sgid,sbit一个存在,就会显示flags
# file: dir03/
# owner: Bob
# group: Bob
user::rwx
user:John:r--                   #effective:---
group::rwx                      #effective:---
mask::---
other::r-x
default:user::rwx
default:user:John:r-x           #effective:---
default:group::r-x              #effective:---
default:group:smith:rwx         #effective:---
default:mask::---
default:other::---


[Bob@basic ~]$ getfacl -a dir03/  # -a, --access: Display the file access control list.
# file: dir03/
# owner: Bob
# group: Bob
user::rwx
user:John:r--                   #effective:---
group::rwx                      #effective:---
mask::---
other::r-x

[Bob@basic ~]$ getfacl -d dir03/  # -d, --default: Display the default access control list.
# file: dir03/
# owner: Bob
# group: Bob
user::rwx
user:John:r-x                   #effective:---
group::r-x                      #effective:---
group:smith:rwx                 #effective:---
mask::---
other::---

[Bob@basic ~]$ getfacl -c dir03/  # -c, --omit-header: Do not display the comment header (the first three lines of each file's output).
user::rwx
user:John:r--                   #effective:---
group::rwx                      #effective:---
mask::---
other::r-x
default:user::rwx
default:user:John:r-x           #effective:---
default:group::r-x              #effective:---
default:group:smith:rwx         #effective:---
default:mask::---
default:other::---


[Bob@basic ~]$ setfacl -m u:Paul:- dir03
[Bob@basic ~]$ getfacl dir03/
# file: dir03/
# owner: Bob
# group: Bob
user::rwx
user:John:r--
user:Paul:---
group::rwx
mask::rwx
other::r-x
default:user::rwx
default:user:John:r-x           #effective:---
default:group::r-x              #effective:---
default:group:smith:rwx         #effective:---
default:mask::---
default:other::---

[Bob@basic ~]$ getfacl -e dir03/  # -e, --all-effective: Print all effective rights comments, even if identical to the rights defined by the ACL entry.
# file: dir03/
# owner: Bob
# group: Bob
user::rwx
user:John:r--                   #effective:r--
user:Paul:---                   #effective:---
group::rwx                      #effective:rwx
mask::rwx
other::r-x
default:user::rwx
default:user:John:r-x           #effective:---
default:group::r-x              #effective:---
default:group:smith:rwx         #effective:---
default:mask::---
default:other::---


[Bob@basic ~]$ getfacl -E dir03/  # -E, --no-effective: Do not print effective rights comments.
# file: dir03/
# owner: Bob
# group: Bob
user::rwx
user:John:r--
user:Paul:---
group::rwx
mask::rwx
other::r-x
default:user::rwx
default:user:John:r-x
default:group::r-x
default:group:smith:rwx
default:mask::---
default:other::---


[Bob@basic ~]$ chmod g+s dir03/
[Bob@basic ~]$ getfacl dir03/
# file: dir03/
# owner: Bob
# group: Bob
# flags: -s-
user::rwx
user:John:r--
user:Paul:---
group::rwx
mask::rwx
other::r-x
default:user::rwx
default:user:John:r-x           #effective:---
default:group::r-x              #effective:---
default:group:smith:rwx         #effective:---
default:mask::---
default:other::---

[Bob@basic ~]$ getfacl  dir03/ dir04/
# file: dir03/
# owner: Bob
# group: Bob
# flags: -s-
user::rwx
user:John:r--
user:Paul:---
group::rwx
mask::rwx
other::r-x
default:user::rwx
default:user:John:r-x           #effective:---
default:group::r-x              #effective:---
default:group:smith:rwx         #effective:---
default:mask::---
default:other::---

# file: dir04/
# owner: Bob
# group: Bob
user::rwx
group::rwx
other::r-x
[Bob@basic ~]$ getfacl -s dir03/ dir04/  # -s, --skip-base: Skip files that only have the base ACL entries (owner, group, others). 即不显示没有扩展 acl entry的文件信息
# file: dir03/
# owner: Bob
# group: Bob
# flags: -s-
user::rwx
user:John:r--
user:Paul:---
group::rwx
mask::rwx
other::r-x
default:user::rwx
default:user:John:r-x           #effective:---
default:group::r-x              #effective:---
default:group:smith:rwx         #effective:---
default:mask::---
default:other::---


[Bob@basic ~]$ getfacl -R dir03/   # -R, --recursive: List the ACLs of all files and directories recursively.
# file: dir03/
# owner: Bob
# group: Bob
# flags: -s-
user::rwx
user:John:r--
user:Paul:---
group::rwx
mask::rwx
other::r-x
default:user::rwx
default:user:John:r-x           #effective:---
default:group::r-x              #effective:---
default:group:smith:rwx         #effective:---
default:mask::---
default:other::---

# file: dir03//a.txt
# owner: Bob
# group: Bob
user::rw-
user:Alice:rw-
user:John:r-x
group::r-x
group:smith:rwx
mask::rwx
other::---



   -t, --tabular
      Use  an  alternative  tabular output format. The ACL and the default ACL are displayed side by side.
      Permissions that are ineffective due to the ACL mask entry are displayed capitalized.
      The entry tag names for the ACL_USER_OBJ and ACL_GROUP_OBJ entries are also displayed in capital letters, which helps in spotting those entries.


[Bob@basic ~]$ getfacl -t dir03/  # -t, --tabular: Use  an  alternative  tabular output format. (更多具体信息见 man getfacl)
# file: dir03/
USER   Bob       rwx  rwx
user   John      r--  R-X
user   Paul      ---
GROUP  Bob       rwx  R-X
group  smith          RWX
mask             rwx  ---
other            r-x  ---



[Bob@basic ~]$ getfacl  ~/dir03/
getfacl: Removing leading '/' from absolute path names
# file: home/Bob/dir03/
# owner: Bob
# group: Bob
# flags: -s-
user::rwx
user:John:r--
user:Paul:---
group::rwx
mask::rwx
other::r-x
default:user::rwx
default:user:John:r-x           #effective:---
default:group::r-x              #effective:---
default:group:smith:rwx         #effective:---
default:mask::---
default:other::---
[Bob@basic ~]$ getfacl -p ~/dir03/   # -p, --absolute-names: Do not strip leading slash characters (`/'). The default behavior is to strip leading slash characters.
# file: /home/Bob/dir03/
# owner: Bob
# group: Bob
# flags: -s-
user::rwx
user:John:r--
user:Paul:---
group::rwx
mask::rwx
other::r-x
default:user::rwx
default:user:John:r-x           #effective:---
default:group::r-x              #effective:---
default:group:smith:rwx         #effective:---
default:mask::---
default:other::---


[Bob@basic ~]$ getfacl -n dir03/  # -n, --numeric: List numeric user and group IDs
# file: dir03/
# owner: 1018
# group: 1018
# flags: -s-
user::rwx
user:1021:r--
user:1023:---
group::rwx
mask::rwx
other::r-x
default:user::rwx
default:user:1021:r-x           #effective:---
default:group::r-x              #effective:---
default:group:1023:rwx          #effective:---
default:mask::---
default:other::---


[Bob@basic ~]$ echo dir01 | getfacl -  # -:   If the file name parameter is a single dash character, getfacl reads a list of files from standard input.
# file: dir01
# owner: Bob
# group: Bob
user::rwx
user:Alice:--x                  #effective:---
user:John:-w-                   #effective:---
user:smith:rwx                  #effective:r--
group::r--
mask::r--
other::r--

[Bob@basic ~]$ echo dir01 | getfacl -- -  # --:  End of command line options. All remaining parameters are interpreted as file names, even if they start with a dash character.
# file: dir01
# owner: Bob
# group: Bob
user::rwx
user:Alice:--x                  #effective:---
user:John:-w-                   #effective:---
user:smith:rwx                  #effective:r--
group::r--
mask::r--
other::r--

